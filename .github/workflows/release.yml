name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci') && !contains(github.event.head_commit.message, 'Merge branch') && !contains(github.event.head_commit.message, 'chore:')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build:prod
      
    - name: Generate changelog
      run: npx conventional-changelog-cli -p angular -i CHANGELOG.md -s -r 0
      
    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Extract version from package.json
        VERSION=$(node -p "require('./package.json').version")
        
        # Create git tag only if it doesn't exist
        if ! git tag -l | grep -q "^v$VERSION$"; then
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
        else
          echo "Tag v$VERSION already exists, skipping tag creation"
        fi
        
        # Create GitHub release only if it doesn't exist
        if ! gh release view "v$VERSION" >/dev/null 2>&1; then
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --notes-file CHANGELOG.md \
            --latest
        else
          echo "Release v$VERSION already exists, skipping release creation"
        fi
          
    - name: Upload release assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(node -p "require('./package.json').version")
        
        # Create distribution archive
        tar -czf fastcomm-health-connect-hub-v$VERSION.tar.gz dist/
        
        # Upload to release
        gh release upload "v$VERSION" fastcomm-health-connect-hub-v$VERSION.tar.gz
        
    - name: Update version
      run: |
        # Bump version patch
        npm version patch --no-git-tag-version
        
        # Commit version bump
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "chore: bump version [skip ci]"
        git push